#!/bin/bash
# The following script automates the LXC creation process for Arch as
# described here: https://wiki.archlinux.org/index.php/Linux_Containers

if [ -z $1 ]; then
  echo "Usage: $0 [container-name]"
  exit
elif [ -z $_LXC_USER ]; then
  echo "Environment variable \$_LXC_USER not set."; vars=true
  echo "  This variable is used to create the initial non-root (but with sudo powers)"
  echo "  user inside of the container."
  exit
fi

name=$1

cd /var/lib/lxc/

if [ -d /var/lib/lxc/$name ]; then
  echo "Container '$name' already exists - skipping straight to initialization."
  cd $name
else
  # Create rootfs and copy arch2 configuration file
  lxc-create -n $name -t /usr/share/lxc/templates/lxc-archlinux
  cd $name
  cat ../config | sed "s/arch2/$name/g" > config

  # Systemd considerations:
  ln -s ../arch2/autodev ./autodev

  # Systemd conflicts in the /dev tree (disable udev and mounting of binfmt_misc):
  chroot rootfs /bin/bash -x <<'EOF'
    ln -s /dev/null /etc/systemd/system/systemd-udevd.service
    ln -s /dev/null /etc/systemd/system/systemd-udevd-control.socket
    ln -s /dev/null /etc/systemd/system/systemd-udevd-kernel.socket
    ln -s /dev/null /etc/systemd/system/proc-sys-fs-binfmt_misc.automount
    exit
EOF
fi

echo "Initializing container '$name' environment..."
lxc-stop   -n $name
#cat `which _lxc-init` | sed "s/\$_LXC_USER/$_LXC_USER/g" > rootfs/_lxc-init # pay no attention...
cp `which _lxc-init` rootfs/
chmod 755 rootfs/_lxc-init
[ ! -e rootfs/.secret ] && cp $HOME/.secret rootfs/root/
lxc-start  -n $name
# TODO: --clear-env but with $_LXC_USER?
#lxcrun="lxc-attach -n $name -- "
lxcrun() { lxc-attach --clear-env -n $name -- /usr/bin/su - -c $1; }
lxcrun /_lxc-init
lxc-stop   -n $name
rm -f rootfs/_lxc-init

