#!/bin/bash
# Assumptions: You use netctl, and the profiles used by netctl are of
# named of the form 'device-network' where:
#   device: e.g. eth0, wlp2s0, ...
#   network: WiFi SSID / name

# This script will then startup the named container, creating a network
# bridge if / when necessary to the profile found running via netctl.

# TODO: Multiple profiles running at same time? Choose first one we can ping?

if [ -z $1 ]; then
  echo "Usage: $0 [container-name]"
  exit
fi

# Don't attempt to start containers that look like pathnames:
if [[ "$1" == */* ]]; then
  echo "Container name '$1' looks like a directory!"
  echo "Giving up."
  exit 1
fi

cont=$1
cmd="$2"

br="`lxc-getbridge $cont`"
#internet=wlp4s0

# TODO: more robust!
internet="`lxc-getinternet $cont`"
#internet=ethTuk
#internet=$(netctl list | grep '^\*' | cut -f2 -d' ' | cut -f1 -d-)

CHAIN=FORWARD

# Configuration of container locations not in /var/lib/lxc:
LXCPATH="`lxc-getpath $cont`"
LXCBRIDGE="`lxc-getbridge $cont`"

if [ ! -e "$LXCPATH/$cont" ]; then
  echo "ERROR: '$LXCPATH/$cont' not found."
  exit
fi

lxcrun() {
  if [ -z "$cmd" ]; then
    # No command given on command line - give terminal to user.
    #lxc-attach --clear-env -n $cont -P "$LXCPATH" -v TERM=xterm-256color -- /usr/bin/su -
    lxc-attach -e -P "$LXCPATH" -n $cont -l DEBUG
  else
    # Command specified - run command:
    lxc-attach -e --clear-env -P "$LXCPATH" -n $cont -- /usr/bin/su - -c "$cmd"
  fi
}

# Container already running? Connect immediately:
if ! [ -z "$(lxc-info -P "$LXCPATH" -n $cont | grep RUNNING)" ]; then
  echo "Container '$cont' already running - connecting now..."
  lxcrun
  exit
fi

if ! (brctl show | grep "^$br"); then
  # Kill the current bridge and all iptables rules:
  #ip link set down dev $br
  #brctl delbr $br
  
  # Setup new bridge:
  brctl addbr $br
  ip link set up dev $br
  HOSTIP=`cat $LXCPATH/$cont/config | grep '^lxc.network.ipv4.gateway = ' | cut -f3 -d' '`
  ip addr add $HOSTIP/24 dev $br
  #ip addr add 192.168.63.100/24 dev $br
  #host IP is ^^^^^^^^^^^^^^
  # lxc IP is in config file (192.168.63.101 on eth0 for arch2)
fi

if [ -z $internet ]; then
  echo "WARNING: No network active. Skipping iptables FORWARDing rules."
else
  
  # https://zyisrad.com/linux-apache-mysql-php-in-an-lxc-container/
  cont_ip=`cat $LXCPATH/$cont/config | egrep "^lxc.network.ipv4 *=" | sed 's/lxc.network.ipv4 *= *//g' | cut -f1 -d/`
  if [ -z "$cont_ip" ]; then
    echo "Could not determine container IP from config file in /var/lib/lxc/$cont/config - QUITTING!"
    exit
  elif ! echo "$cont_ip" | egrep -q "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"; then
    echo "Container IP of '$cont_ip' does not look like an IP. What? QUITTING!"
    exit
  fi

  # Flush and enable forwarding:
  #iptables --flush $CHAIN
  sysctl net.ipv4.ip_forward=1 1>/dev/null
  
  # Enable forwarding from $br to $internet
  #iptables -t nat -A POSTROUTING -o $internet -j MASQUERADE
  #iptables -A $CHAIN -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
  #iptables -A $CHAIN -i $br -o $internet -j ACCEPT

  # TODO: only forward port 443 for container with web server
  #iptables -t nat -D PREROUTING -p tcp -m tcp --dport 443 -j DNAT --to-destination $cont_ip:443
  #iptables -t nat -D POSTROUTING -s $cont_ip/32 -j MASQUERADE

fi

lxc-start -P "$LXCPATH" -n $cont -l DEBUG
lxcrun

